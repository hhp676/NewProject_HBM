<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="fileEncoding" value="utf-8" />
		<property name="locations">
			<list>
				<value>classpath*:xxl-job-admin.properties</value>
			</list>
		</property>
	</bean>

	<!-- ********************************* part 1 :for datasource ********************************* -->
    
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
        <property name="jndiName" value="java:comp/env/jdbc/hbm" /> </bean>

    <!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
        init-method="init" destroy-method="close"> <property name="connectionProperties" 
        value="config.decrypt=true;config.decrypt.key=${xxl.job.db.url.publickey}" 
        /> 基本属性 url、user、password <property name="url" value="${xxl.job.db.url}" 
        /> <property name="username" value="${xxl.job.db.user}" /> <property name="password" 
        value="${xxl.job.db.password}" /> 配置初始化大小、最小、最大 <property name="initialSize" 
        value="1" /> <property name="minIdle" value="1" /> <property name="maxActive" 
        value="20" /> 配置获取连接等待超时的时间 <property name="maxWait" value="60000" /> 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
        <property name="timeBetweenEvictionRunsMillis" value="60000" /> 配置一个连接在池中最小生存的时间，单位是毫秒 
        <property name="minEvictableIdleTimeMillis" value="300000" /> <property name="validationQuery" 
        value="SELECT 'x'" /> <property name="testWhileIdle" value="true" /> <property 
        name="testOnBorrow" value="false" /> <property name="testOnReturn" value="false" 
        /> 打开PSCache，并且指定每个连接上PSCache的大小 <property name="poolPreparedStatements" 
        value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
        value="20" /> 配置数据库密码加密、监控统计拦截的filters <property name="filters" value="config,stat" 
        /> </bean> -->
	
    
	<!-- ********************************* part 2 :for tx ********************************* -->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
      
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="detail*" propagation="SUPPORTS" />
			<tx:method name="visit*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="check*" propagation="SUPPORTS" />
			<tx:method name="list*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="exception" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="txoperation" expression="execution(* com.xxl.job.admin.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="txoperation" advice-ref="txAdvice" />
	</aop:config>

	<!-- ********************************* part 3 :for xxl-job scheduler ********************************* -->

	<bean id="quartzScheduler" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="autoStartup" value="true" />			<!--自动启动 -->
		<property name="startupDelay" value="20" />				<!--延时启动，应用启动成功后在启动 -->
		<property name="overwriteExistingJobs" value="true" />	<!--覆盖DB中JOB：true、以数据库中已经存在的为准：false -->
		<property name="applicationContextSchedulerContextKey"  value="applicationContextKey" />
		<property name="configLocation" value="classpath:quartz.properties"/>
	</bean>

	<bean id="xxlJobDynamicScheduler" class="com.xxl.job.admin.core.schedule.XxlJobDynamicScheduler" init-method="init" destroy-method="destroy" >
		<!-- (轻易不要变更“调度器名称”, 任务创建时会绑定该“调度器名称”) -->
		<property name="scheduler" ref="quartzScheduler"/>
		<!-- 调度中心回调IP[选填]，为空则自动获取 -->
		<property name="callBackIp" value="${xxl.job.callBackIp}"/>
		<!-- 调度中心回调端口号 -->
		<property name="callBackPort" value="${xxl.job.callBackPort}"/>
	</bean>
	
</beans>