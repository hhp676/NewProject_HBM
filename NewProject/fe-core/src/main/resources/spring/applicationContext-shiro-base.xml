<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>Shiro安全配置</description>

    <!-- 使用redis缓存 -->
    <!--<import resource="classpath:/shiro/shiro-redis.xml" />-->

    <!-- 使用ehcache缓存 -->
    <import resource="classpath:/shiro/shiro-ehcache.xml" />

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!-- Shiro's main business-tier object for web-enabled applications -->
    <!-- realms 支持普通登录、TOKEN登录、REST登录和通用单点登录和CAS单点登录。请将不使用的realm注释或移除 -->
    <bean id="securityManager" class="com.hginfo.hbm.fe.core.shiro.HgWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="generalShiroDbRealm" />
                <ref bean="tokenShiroDbRealm" />
                <ref bean="restShiroDbRealm" />
                <ref bean="ssoShiroDbRealm" />
                <!-- <ref bean="casShiroDbRealm" /> -->
            </list>
        </property>
        <property name="cacheManager" ref="shiroCacheManager" />
        <property name="sessionManager" ref="sessionManager" />
        <!-- 一种token只使用一个realm -->
        <property name="authenticator.authenticationStrategy" ref="firstExceptionStrategy"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO"
          class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
        <property name="sessionIdGenerator" ref="sessionIdGenerator" />
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid" />
        <property name="httpOnly" value="true" />
        <property name="maxAge" value="-1" />
    </bean>

    <!-- 基于ini配置的realm -->
    <!-- <bean id="shiroIniRealm" class="org.apache.shiro.realm.text.IniRealm">
        <property name="resourcePath" value="classpath:shiro/shiro.ini" />
    </bean> -->
    
    <!-- realms -->
    <bean id="generalShiroDbRealm" class="com.hginfo.hbm.fe.core.shiro.GeneralShiroDbRealm" />
    <bean id="tokenShiroDbRealm" class="com.hginfo.hbm.fe.core.shiro.login.token.TokenShiroDbRealm" />
    <bean id="restShiroDbRealm" class="com.hginfo.hbm.fe.core.shiro.login.rest.RestShiroDbRealm" />
    <bean id="ssoShiroDbRealm" class="com.hginfo.hbm.fe.core.shiro.login.sso.SSOShiroDbRealm" />
    <!-- cas realm -->
    <!-- <bean id="casShiroDbRealm" class="com.hginfo.hbm.fe.core.shiro.login.sso.cas.CasShiroDbRealm">
        配置cas服务器地址
        <property name="casServerUrlPrefix" value="http://127.0.0.1:9080/cas" />
        客户端的回调地址设置，必须和过滤器ssoAuthc拦截的地址一致
        <property name="casService" value="http://127.0.0.1:8080/hbm-fe-easyui/ssoLogin" />
    </bean> -->
    
    <!-- shiro Filter -->
    <bean id="hgLogoutFilter" class="com.hginfo.hbm.fe.core.shiro.HgLogoutFilter" />
    <bean id="generalFormAuthenticationIniFilter" class="com.hginfo.hbm.fe.core.shiro.GeneralFormAuthenticationIniFilter" />
    <bean id="ssoFormAuthenticationIniFilter" class="com.hginfo.hbm.fe.core.shiro.login.sso.SSOFormAuthenticationIniFilter" />
    <bean id="generalUserFilter" class="com.hginfo.hbm.fe.core.shiro.GeneralUserFilter" />
    <!-- <bean id="restUserFilter" class="com.hginfo.hbm.fe.core.shiro.login.rest.RestUserFilter" /> -->
    <bean id="hgAuthFilter" class="com.hginfo.hbm.fe.core.shiro.HgCheckAllUrlFilter" />
    <!-- <bean id="hgAuthFilter" class="com.hginfo.hbm.fe.core.shiro.HgCheckAuthUrlFilter" /> -->
    
    <!-- 一种token只使用一个realm策略bean -->
    <bean id="firstExceptionStrategy" class="com.hginfo.hbm.fe.core.shiro.FirstExceptionStrategy"/>
    
    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="filters">
            <map>
                <entry key="authc" value-ref="generalFormAuthenticationIniFilter" />
                <entry key="ssoAuthc" value-ref="ssoFormAuthenticationIniFilter" />
                <entry key="generalUser" value-ref="generalUserFilter" />
                <entry key="hgauth" value-ref="hgAuthFilter" />
            </map>
        </property>
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/login" />
        <!-- <property name="loginUrl" value="http://127.0.0.1:9080/cas/login?service=http://127.0.0.1:8080/hbm-fe-easyui/ssoLogin" /> -->
        <property name="successUrl" value="/" />
        <property name="unauthorizedUrl" value="/login" />
        <property name="filterChainDefinitions">
            <value>
                /login = authc
                /ssoLogin = ssoAuthc
                /logout = hgLogoutFilter
                /anonPages/** = anon
                /sys/common/** = generalUser
                /common/demo/** = generalUser <!-- demo只需用户登录 -->
                /common/** = generalUser, hgauth
                /sys/** = generalUser, hgauth
                /druid/** = generalUser, hgauth
                /chkSession = anon
                / = generalUser
            </value>
        </property>
    </bean>

    <!-- 如果要实现cas的remember me的功能，需要用到下面这个bean，并设置到securityManager的subjectFactory中 -->
    <!-- <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" /> -->

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>
</beans>